// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user.proto

package server

import (
	"context"

	"srv/internal/logic"
	__proto"srv/internal/proto"
	"srv/internal/svc"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	__proto.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Ping(ctx context.Context, in *__proto.Req) (*__proto.Res, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *UserServer) Login(ctx context.Context, in *__proto.LoginReq) (*__proto.LoginRes, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) Register(ctx context.Context, in *__proto.RegisterReq) (*__proto.RegisterRes, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) GetUserInfo(ctx context.Context, in *__proto.UserInfoReq) (*__proto.UserInfoRes, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UserServer) FindUser(ctx context.Context, in *__proto.FindUserReq) (*__proto.UserInfoRes, error) {
	l := logic.NewFindUserLogic(ctx, s.svcCtx)
	return l.FindUser(in)
}
