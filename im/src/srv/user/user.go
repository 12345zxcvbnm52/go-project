// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user.proto

package user

import (
	"context"

	__proto "srv/internal/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FindUserReq = __proto.FindUserReq
	LoginReq    = __proto.LoginReq
	LoginRes    = __proto.LoginRes
	RegisterReq = __proto.RegisterReq
	RegisterRes = __proto.RegisterRes
	Req         = __proto.Req
	Res         = __proto.Res
	UserInfoReq = __proto.UserInfoReq
	UserInfoRes = __proto.UserInfoRes

	User interface {
		Ping(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Res, error)
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error)
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRes, error)
		GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoRes, error)
		FindUser(ctx context.Context, in *FindUserReq, opts ...grpc.CallOption) (*UserInfoRes, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Ping(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Res, error) {
	client := __proto.NewUserClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultUser) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error) {
	client := __proto.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRes, error) {
	client := __proto.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoRes, error) {
	client := __proto.NewUserClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUser) FindUser(ctx context.Context, in *FindUserReq, opts ...grpc.CallOption) (*UserInfoRes, error) {
	client := __proto.NewUserClient(m.cli.Conn())
	return client.FindUser(ctx, in, opts...)
}
