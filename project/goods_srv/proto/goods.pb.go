// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: goods.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 返回一堆商品目录
type CategyListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data     []*CategyInfoRes `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	JsonData string           `protobuf:"bytes,3,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
}

func (x *CategyListRes) Reset() {
	*x = CategyListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategyListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategyListRes) ProtoMessage() {}

func (x *CategyListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategyListRes.ProtoReflect.Descriptor instead.
func (*CategyListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{0}
}

func (x *CategyListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CategyListRes) GetData() []*CategyInfoRes {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CategyListRes) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

// 商品目录信息类
type CategyInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentCategyId uint32 `protobuf:"varint,3,opt,name=parentCategyId,proto3" json:"parentCategyId,omitempty"`
	Level          int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	OnTable        bool   `protobuf:"varint,5,opt,name=OnTable,proto3" json:"OnTable,omitempty"`
}

func (x *CategyInfoReq) Reset() {
	*x = CategyInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategyInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategyInfoReq) ProtoMessage() {}

func (x *CategyInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategyInfoReq.ProtoReflect.Descriptor instead.
func (*CategyInfoReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{1}
}

func (x *CategyInfoReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategyInfoReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategyInfoReq) GetParentCategyId() uint32 {
	if x != nil {
		return x.ParentCategyId
	}
	return 0
}

func (x *CategyInfoReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CategyInfoReq) GetOnTable() bool {
	if x != nil {
		return x.OnTable
	}
	return false
}

// 返回商品目录信息
type CategyInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentCategyId uint32 `protobuf:"varint,3,opt,name=parentCategyId,proto3" json:"parentCategyId,omitempty"`
	Level          int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	OnTable        bool   `protobuf:"varint,5,opt,name=OnTable,proto3" json:"OnTable,omitempty"`
}

func (x *CategyInfoRes) Reset() {
	*x = CategyInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategyInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategyInfoRes) ProtoMessage() {}

func (x *CategyInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategyInfoRes.ProtoReflect.Descriptor instead.
func (*CategyInfoRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{2}
}

func (x *CategyInfoRes) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategyInfoRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategyInfoRes) GetParentCategyId() uint32 {
	if x != nil {
		return x.ParentCategyId
	}
	return 0
}

func (x *CategyInfoRes) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CategyInfoRes) GetOnTable() bool {
	if x != nil {
		return x.OnTable
	}
	return false
}

// 指定删除目录
type DelCategyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelCategyReq) Reset() {
	*x = DelCategyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCategyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCategyReq) ProtoMessage() {}

func (x *DelCategyReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCategyReq.ProtoReflect.Descriptor instead.
func (*DelCategyReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{3}
}

func (x *DelCategyReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 暂时没有用到
type CategyFliterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OnTable bool   `protobuf:"varint,2,opt,name=OnTable,proto3" json:"OnTable,omitempty"`
}

func (x *CategyFliterReq) Reset() {
	*x = CategyFliterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategyFliterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategyFliterReq) ProtoMessage() {}

func (x *CategyFliterReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategyFliterReq.ProtoReflect.Descriptor instead.
func (*CategyFliterReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{4}
}

func (x *CategyFliterReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategyFliterReq) GetOnTable() bool {
	if x != nil {
		return x.OnTable
	}
	return false
}

// 暂时没有用到
type QueryCategyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *QueryCategyRes) Reset() {
	*x = QueryCategyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCategyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCategyRes) ProtoMessage() {}

func (x *QueryCategyRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCategyRes.ProtoReflect.Descriptor instead.
func (*QueryCategyRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{5}
}

func (x *QueryCategyRes) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCategyRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 请求对应商品目录的子目录
type SubCategyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Level int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *SubCategyReq) Reset() {
	*x = SubCategyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubCategyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubCategyReq) ProtoMessage() {}

func (x *SubCategyReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubCategyReq.ProtoReflect.Descriptor instead.
func (*SubCategyReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{6}
}

func (x *SubCategyReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubCategyReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

// 返回查询到的子商品目录
type SubCategyListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// 既把Sub目录返回,也把Sub的Sub目录返回
	SelfInfo *CategyInfoRes   `protobuf:"bytes,2,opt,name=selfInfo,proto3" json:"selfInfo,omitempty"`
	SubInfo  []*CategyInfoRes `protobuf:"bytes,3,rep,name=subInfo,proto3" json:"subInfo,omitempty"`
}

func (x *SubCategyListRes) Reset() {
	*x = SubCategyListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubCategyListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubCategyListRes) ProtoMessage() {}

func (x *SubCategyListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubCategyListRes.ProtoReflect.Descriptor instead.
func (*SubCategyListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{7}
}

func (x *SubCategyListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SubCategyListRes) GetSelfInfo() *CategyInfoRes {
	if x != nil {
		return x.SelfInfo
	}
	return nil
}

func (x *SubCategyListRes) GetSubInfo() []*CategyInfoRes {
	if x != nil {
		return x.SubInfo
	}
	return nil
}

type BatchCategyInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId   []uint32 `protobuf:"varint,1,rep,packed,name=goodsId,proto3" json:"goodsId,omitempty"`
	GoodsNums int32    `protobuf:"varint,2,opt,name=goodsNums,proto3" json:"goodsNums,omitempty"`
	BrandNums int32    `protobuf:"varint,3,opt,name=brandNums,proto3" json:"brandNums,omitempty"`
}

func (x *BatchCategyInfoReq) Reset() {
	*x = BatchCategyInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCategyInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCategyInfoReq) ProtoMessage() {}

func (x *BatchCategyInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCategyInfoReq.ProtoReflect.Descriptor instead.
func (*BatchCategyInfoReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{8}
}

func (x *BatchCategyInfoReq) GetGoodsId() []uint32 {
	if x != nil {
		return x.GoodsId
	}
	return nil
}

func (x *BatchCategyInfoReq) GetGoodsNums() int32 {
	if x != nil {
		return x.GoodsNums
	}
	return 0
}

func (x *BatchCategyInfoReq) GetBrandNums() int32 {
	if x != nil {
		return x.BrandNums
	}
	return 0
}

// 这里的几个可能是用于多对多关系的查询?
// 限制返回的消息数量
type CategyBrandFilterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PagesNum int32 `protobuf:"varint,1,opt,name=pagesNum,proto3" json:"pagesNum,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *CategyBrandFilterReq) Reset() {
	*x = CategyBrandFilterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategyBrandFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategyBrandFilterReq) ProtoMessage() {}

func (x *CategyBrandFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategyBrandFilterReq.ProtoReflect.Descriptor instead.
func (*CategyBrandFilterReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{9}
}

func (x *CategyBrandFilterReq) GetPagesNum() int32 {
	if x != nil {
		return x.PagesNum
	}
	return 0
}

func (x *CategyBrandFilterReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 暂时没有用到
type CategyFilterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PagesNum int32 `protobuf:"varint,1,opt,name=pagesNum,proto3" json:"pagesNum,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *CategyFilterReq) Reset() {
	*x = CategyFilterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategyFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategyFilterReq) ProtoMessage() {}

func (x *CategyFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategyFilterReq.ProtoReflect.Descriptor instead.
func (*CategyFilterReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{10}
}

func (x *CategyFilterReq) GetPagesNum() int32 {
	if x != nil {
		return x.PagesNum
	}
	return 0
}

func (x *CategyFilterReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 请求获得商品品牌与商品目录
type CategyBrandInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CategyId uint32 `protobuf:"varint,2,opt,name=categyId,proto3" json:"categyId,omitempty"`
	BrandId  uint32 `protobuf:"varint,3,opt,name=brandId,proto3" json:"brandId,omitempty"`
}

func (x *CategyBrandInfoReq) Reset() {
	*x = CategyBrandInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategyBrandInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategyBrandInfoReq) ProtoMessage() {}

func (x *CategyBrandInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategyBrandInfoReq.ProtoReflect.Descriptor instead.
func (*CategyBrandInfoReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{11}
}

func (x *CategyBrandInfoReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategyBrandInfoReq) GetCategyId() uint32 {
	if x != nil {
		return x.CategyId
	}
	return 0
}

func (x *CategyBrandInfoReq) GetBrandId() uint32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

type CategyBrandListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*CategyBrandInfoRes `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CategyBrandListRes) Reset() {
	*x = CategyBrandListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategyBrandListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategyBrandListRes) ProtoMessage() {}

func (x *CategyBrandListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategyBrandListRes.ProtoReflect.Descriptor instead.
func (*CategyBrandListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{12}
}

func (x *CategyBrandListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CategyBrandListRes) GetData() []*CategyBrandInfoRes {
	if x != nil {
		return x.Data
	}
	return nil
}

// 返回获得商品品牌与商品目录?
type CategyBrandInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BrandInfo  *BrandInfoRes  `protobuf:"bytes,2,opt,name=brandInfo,proto3" json:"brandInfo,omitempty"`
	CategyInfo *CategyInfoRes `protobuf:"bytes,3,opt,name=CategyInfo,proto3" json:"CategyInfo,omitempty"`
}

func (x *CategyBrandInfoRes) Reset() {
	*x = CategyBrandInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategyBrandInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategyBrandInfoRes) ProtoMessage() {}

func (x *CategyBrandInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategyBrandInfoRes.ProtoReflect.Descriptor instead.
func (*CategyBrandInfoRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{13}
}

func (x *CategyBrandInfoRes) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategyBrandInfoRes) GetBrandInfo() *BrandInfoRes {
	if x != nil {
		return x.BrandInfo
	}
	return nil
}

func (x *CategyBrandInfoRes) GetCategyInfo() *CategyInfoRes {
	if x != nil {
		return x.CategyInfo
	}
	return nil
}

// 请求限制数量的品牌类型
type BrandFilterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PagesNum int32 `protobuf:"varint,1,opt,name=pagesNum,proto3" json:"pagesNum,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *BrandFilterReq) Reset() {
	*x = BrandFilterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandFilterReq) ProtoMessage() {}

func (x *BrandFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandFilterReq.ProtoReflect.Descriptor instead.
func (*BrandFilterReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{14}
}

func (x *BrandFilterReq) GetPagesNum() int32 {
	if x != nil {
		return x.PagesNum
	}
	return 0
}

func (x *BrandFilterReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 返回一堆滑动窗口商品信息
type BannerListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*BannerInfoRes `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BannerListRes) Reset() {
	*x = BannerListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerListRes) ProtoMessage() {}

func (x *BannerListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerListRes.ProtoReflect.Descriptor instead.
func (*BannerListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{15}
}

func (x *BannerListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BannerListRes) GetData() []*BannerInfoRes {
	if x != nil {
		return x.Data
	}
	return nil
}

// 请求滑动窗口的商品
type BannerInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Index int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Url   string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *BannerInfoReq) Reset() {
	*x = BannerInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerInfoReq) ProtoMessage() {}

func (x *BannerInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerInfoReq.ProtoReflect.Descriptor instead.
func (*BannerInfoReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{16}
}

func (x *BannerInfoReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BannerInfoReq) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BannerInfoReq) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *BannerInfoReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 返回滑动窗口的商品的信息
type BannerInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Index int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Url   string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *BannerInfoRes) Reset() {
	*x = BannerInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerInfoRes) ProtoMessage() {}

func (x *BannerInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerInfoRes.ProtoReflect.Descriptor instead.
func (*BannerInfoRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{17}
}

func (x *BannerInfoRes) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BannerInfoRes) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BannerInfoRes) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *BannerInfoRes) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 请求商品品牌
type BrandInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *BrandInfoReq) Reset() {
	*x = BrandInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandInfoReq) ProtoMessage() {}

func (x *BrandInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandInfoReq.ProtoReflect.Descriptor instead.
func (*BrandInfoReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{18}
}

func (x *BrandInfoReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandInfoReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandInfoReq) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

// 返回品牌信息
type BrandInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *BrandInfoRes) Reset() {
	*x = BrandInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandInfoRes) ProtoMessage() {}

func (x *BrandInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandInfoRes.ProtoReflect.Descriptor instead.
func (*BrandInfoRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{19}
}

func (x *BrandInfoRes) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandInfoRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandInfoRes) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

// 返回一堆品牌信息
type BrandListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*BrandInfoRes `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BrandListRes) Reset() {
	*x = BrandListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListRes) ProtoMessage() {}

func (x *BrandListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListRes.ProtoReflect.Descriptor instead.
func (*BrandListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{20}
}

func (x *BrandListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BrandListRes) GetData() []*BrandInfoRes {
	if x != nil {
		return x.Data
	}
	return nil
}

// 请求删除一个指定的品牌
type DelBrandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DelBrandReq) Reset() {
	*x = DelBrandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBrandReq) ProtoMessage() {}

func (x *DelBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBrandReq.ProtoReflect.Descriptor instead.
func (*DelBrandReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{21}
}

func (x *DelBrandReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelBrandReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 请求删除指定商品
type DelGoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelGoodsReq) Reset() {
	*x = DelGoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelGoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelGoodsReq) ProtoMessage() {}

func (x *DelGoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelGoodsReq.ProtoReflect.Descriptor instead.
func (*DelGoodsReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{22}
}

func (x *DelGoodsReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 返回商品简明信息
type CategyBriefInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CategyBriefInfoRes) Reset() {
	*x = CategyBriefInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategyBriefInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategyBriefInfoRes) ProtoMessage() {}

func (x *CategyBriefInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategyBriefInfoRes.ProtoReflect.Descriptor instead.
func (*CategyBriefInfoRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{23}
}

func (x *CategyBriefInfoRes) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategyBriefInfoRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 请求具体商品信息
type GoodsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GoodsInfoReq) Reset() {
	*x = GoodsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsInfoReq) ProtoMessage() {}

func (x *GoodsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsInfoReq.ProtoReflect.Descriptor instead.
func (*GoodsInfoReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{24}
}

func (x *GoodsInfoReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GoodsIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []uint32 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
}

func (x *GoodsIdsReq) Reset() {
	*x = GoodsIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsIdsReq) ProtoMessage() {}

func (x *GoodsIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsIdsReq.ProtoReflect.Descriptor instead.
func (*GoodsIdsReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{25}
}

func (x *GoodsIdsReq) GetId() []uint32 {
	if x != nil {
		return x.Id
	}
	return nil
}

// 请求创建/或创建商品
type WriteGoodsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GoodsSign   string   `protobuf:"bytes,3,opt,name=goodsSign,proto3" json:"goodsSign,omitempty"`
	GoodsBrief  string   `protobuf:"bytes,4,opt,name=goodsBrief,proto3" json:"goodsBrief,omitempty"`
	TransFree   bool     `protobuf:"varint,5,opt,name=transFree,proto3" json:"transFree,omitempty"`
	Images      []string `protobuf:"bytes,6,rep,name=images,proto3" json:"images,omitempty"`
	DescImages  []string `protobuf:"bytes,7,rep,name=descImages,proto3" json:"descImages,omitempty"`
	FirstImage  string   `protobuf:"bytes,8,opt,name=firstImage,proto3" json:"firstImage,omitempty"`
	OnSale      bool     `protobuf:"varint,9,opt,name=onSale,proto3" json:"onSale,omitempty"`
	CategyId    uint32   `protobuf:"varint,10,opt,name=categyId,proto3" json:"categyId,omitempty"`
	BrandId     uint32   `protobuf:"varint,11,opt,name=brandId,proto3" json:"brandId,omitempty"`
	MarketPrice float32  `protobuf:"fixed32,12,opt,name=MarketPrice,proto3" json:"MarketPrice,omitempty"`
	SalePrice   float32  `protobuf:"fixed32,13,opt,name=SalePrice,proto3" json:"SalePrice,omitempty"`
}

func (x *WriteGoodsInfoReq) Reset() {
	*x = WriteGoodsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteGoodsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteGoodsInfoReq) ProtoMessage() {}

func (x *WriteGoodsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteGoodsInfoReq.ProtoReflect.Descriptor instead.
func (*WriteGoodsInfoReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{26}
}

func (x *WriteGoodsInfoReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WriteGoodsInfoReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WriteGoodsInfoReq) GetGoodsSign() string {
	if x != nil {
		return x.GoodsSign
	}
	return ""
}

func (x *WriteGoodsInfoReq) GetGoodsBrief() string {
	if x != nil {
		return x.GoodsBrief
	}
	return ""
}

func (x *WriteGoodsInfoReq) GetTransFree() bool {
	if x != nil {
		return x.TransFree
	}
	return false
}

func (x *WriteGoodsInfoReq) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *WriteGoodsInfoReq) GetDescImages() []string {
	if x != nil {
		return x.DescImages
	}
	return nil
}

func (x *WriteGoodsInfoReq) GetFirstImage() string {
	if x != nil {
		return x.FirstImage
	}
	return ""
}

func (x *WriteGoodsInfoReq) GetOnSale() bool {
	if x != nil {
		return x.OnSale
	}
	return false
}

func (x *WriteGoodsInfoReq) GetCategyId() uint32 {
	if x != nil {
		return x.CategyId
	}
	return 0
}

func (x *WriteGoodsInfoReq) GetBrandId() uint32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *WriteGoodsInfoReq) GetMarketPrice() float32 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *WriteGoodsInfoReq) GetSalePrice() float32 {
	if x != nil {
		return x.SalePrice
	}
	return 0
}

// 请求并过滤商品信息
type GoodsFilterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinPrice int32 `protobuf:"varint,1,opt,name=minPrice,proto3" json:"minPrice,omitempty"`
	MaxPrice int32 `protobuf:"varint,2,opt,name=maxPrice,proto3" json:"maxPrice,omitempty"`
	IsHot    bool  `protobuf:"varint,3,opt,name=isHot,proto3" json:"isHot,omitempty"`
	IsNew    bool  `protobuf:"varint,4,opt,name=isNew,proto3" json:"isNew,omitempty"`
	OnTable  bool  `protobuf:"varint,5,opt,name=onTable,proto3" json:"onTable,omitempty"`
	// 确定点击的目录是哪一级,会递归显示下一层(或者说下几层)目录
	CategyId uint32 `protobuf:"varint,6,opt,name=categyId,proto3" json:"categyId,omitempty"`
	PagesNum int32  `protobuf:"varint,7,opt,name=pagesNum,proto3" json:"pagesNum,omitempty"`
	PageSize int32  `protobuf:"varint,8,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	KeyWords string `protobuf:"bytes,9,opt,name=keyWords,proto3" json:"keyWords,omitempty"`
	BrandId  uint32 `protobuf:"varint,10,opt,name=brandId,proto3" json:"brandId,omitempty"`
	Id       uint32 `protobuf:"varint,11,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GoodsFilterReq) Reset() {
	*x = GoodsFilterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsFilterReq) ProtoMessage() {}

func (x *GoodsFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsFilterReq.ProtoReflect.Descriptor instead.
func (*GoodsFilterReq) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{27}
}

func (x *GoodsFilterReq) GetMinPrice() int32 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *GoodsFilterReq) GetMaxPrice() int32 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *GoodsFilterReq) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *GoodsFilterReq) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *GoodsFilterReq) GetOnTable() bool {
	if x != nil {
		return x.OnTable
	}
	return false
}

func (x *GoodsFilterReq) GetCategyId() uint32 {
	if x != nil {
		return x.CategyId
	}
	return 0
}

func (x *GoodsFilterReq) GetPagesNum() int32 {
	if x != nil {
		return x.PagesNum
	}
	return 0
}

func (x *GoodsFilterReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GoodsFilterReq) GetKeyWords() string {
	if x != nil {
		return x.KeyWords
	}
	return ""
}

func (x *GoodsFilterReq) GetBrandId() uint32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *GoodsFilterReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 返回具体商品信息
type GoodsInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CategyId    uint32   `protobuf:"varint,2,opt,name=categyId,proto3" json:"categyId,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	GoodsSign   string   `protobuf:"bytes,4,opt,name=goodsSign,proto3" json:"goodsSign,omitempty"`
	ClickNum    int32    `protobuf:"varint,5,opt,name=clickNum,proto3" json:"clickNum,omitempty"`
	SoldNum     int32    `protobuf:"varint,6,opt,name=soldNum,proto3" json:"soldNum,omitempty"`
	FavorNum    int32    `protobuf:"varint,7,opt,name=favorNum,proto3" json:"favorNum,omitempty"`
	MarketPrice float32  `protobuf:"fixed32,8,opt,name=MarketPrice,proto3" json:"MarketPrice,omitempty"`
	SalePrice   float32  `protobuf:"fixed32,9,opt,name=SalePrice,proto3" json:"SalePrice,omitempty"`
	GoodsBrief  string   `protobuf:"bytes,10,opt,name=goodsBrief,proto3" json:"goodsBrief,omitempty"`
	TransFree   bool     `protobuf:"varint,12,opt,name=transFree,proto3" json:"transFree,omitempty"`
	Images      []string `protobuf:"bytes,13,rep,name=images,proto3" json:"images,omitempty"`
	DescImages  []string `protobuf:"bytes,14,rep,name=descImages,proto3" json:"descImages,omitempty"`
	FirstImage  string   `protobuf:"bytes,15,opt,name=firstImage,proto3" json:"firstImage,omitempty"`
	IsNew       bool     `protobuf:"varint,16,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsHot       bool     `protobuf:"varint,17,opt,name=isHot,proto3" json:"isHot,omitempty"`
	OnSale      bool     `protobuf:"varint,18,opt,name=onSale,proto3" json:"onSale,omitempty"`
	// 这里还把该商品目录的简明信息拿到了
	Categy *CategyBriefInfoRes `protobuf:"bytes,20,opt,name=categy,proto3" json:"categy,omitempty"`
	Brand  *BrandInfoRes       `protobuf:"bytes,21,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *GoodsInfoRes) Reset() {
	*x = GoodsInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsInfoRes) ProtoMessage() {}

func (x *GoodsInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsInfoRes.ProtoReflect.Descriptor instead.
func (*GoodsInfoRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{28}
}

func (x *GoodsInfoRes) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsInfoRes) GetCategyId() uint32 {
	if x != nil {
		return x.CategyId
	}
	return 0
}

func (x *GoodsInfoRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsInfoRes) GetGoodsSign() string {
	if x != nil {
		return x.GoodsSign
	}
	return ""
}

func (x *GoodsInfoRes) GetClickNum() int32 {
	if x != nil {
		return x.ClickNum
	}
	return 0
}

func (x *GoodsInfoRes) GetSoldNum() int32 {
	if x != nil {
		return x.SoldNum
	}
	return 0
}

func (x *GoodsInfoRes) GetFavorNum() int32 {
	if x != nil {
		return x.FavorNum
	}
	return 0
}

func (x *GoodsInfoRes) GetMarketPrice() float32 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *GoodsInfoRes) GetSalePrice() float32 {
	if x != nil {
		return x.SalePrice
	}
	return 0
}

func (x *GoodsInfoRes) GetGoodsBrief() string {
	if x != nil {
		return x.GoodsBrief
	}
	return ""
}

func (x *GoodsInfoRes) GetTransFree() bool {
	if x != nil {
		return x.TransFree
	}
	return false
}

func (x *GoodsInfoRes) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *GoodsInfoRes) GetDescImages() []string {
	if x != nil {
		return x.DescImages
	}
	return nil
}

func (x *GoodsInfoRes) GetFirstImage() string {
	if x != nil {
		return x.FirstImage
	}
	return ""
}

func (x *GoodsInfoRes) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *GoodsInfoRes) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *GoodsInfoRes) GetOnSale() bool {
	if x != nil {
		return x.OnSale
	}
	return false
}

func (x *GoodsInfoRes) GetCategy() *CategyBriefInfoRes {
	if x != nil {
		return x.Categy
	}
	return nil
}

func (x *GoodsInfoRes) GetBrand() *BrandInfoRes {
	if x != nil {
		return x.Brand
	}
	return nil
}

type GoodsListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*GoodsInfoRes `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GoodsListRes) Reset() {
	*x = GoodsListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsListRes) ProtoMessage() {}

func (x *GoodsListRes) ProtoReflect() protoreflect.Message {
	mi := &file_goods_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsListRes.ProtoReflect.Descriptor instead.
func (*GoodsListRes) Descriptor() ([]byte, []int) {
	return file_goods_proto_rawDescGZIP(), []int{29}
}

func (x *GoodsListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GoodsListRes) GetData() []*GoodsInfoRes {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_goods_proto protoreflect.FileDescriptor

var file_goods_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x0d, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x8b, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x1e, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a,
	0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x46, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x4f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x4f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x34, 0x0a, 0x0e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x34, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x7e, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6a, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e,
	0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x4e, 0x75, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x75, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x75,
	0x6d, 0x73, 0x22, 0x4e, 0x0a, 0x14, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x49, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x75,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x5a, 0x0a,
	0x12, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x12, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81,
	0x01, 0x0a, 0x12, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x48, 0x0a, 0x0e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x75, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x49, 0x0a, 0x0d,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5d, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x46, 0x0a, 0x0c, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x22, 0x46, 0x0a,
	0x0c, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x22, 0x47, 0x0a, 0x0c, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x1d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x38, 0x0a, 0x12, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x0b, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf9, 0x02, 0x0a, 0x11, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x69, 0x67, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x69, 0x67,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x46, 0x72, 0x65, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x46, 0x72, 0x65, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x53, 0x61, 0x6c, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xa8, 0x02, 0x0a, 0x0e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f,
	0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65,
	0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65,
	0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xaa, 0x04, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6f,
	0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x4e, 0x75,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x4e, 0x75,
	0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x46, 0x72, 0x65, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x46, 0x72, 0x65, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x48, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x52, 0x06, 0x63, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x47, 0x0a,
	0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x9c, 0x0a, 0x0a, 0x05, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x12, 0x2d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x0f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x0d, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x0c, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x0d, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x0d, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x0d, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x12, 0x30, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12,
	0x12, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x12, 0x0c, 0x2e, 0x44, 0x65, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3a, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x12, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x0d, 0x2e, 0x53, 0x75, 0x62, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x53, 0x75, 0x62, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x0e, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x0d, 0x2e, 0x44, 0x65,
	0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x36, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x12, 0x0e, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0c, 0x2e, 0x44, 0x65, 0x6c, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x37, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x0c, 0x2e, 0x44, 0x65,
	0x6c, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x36, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x12, 0x0e, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x15, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x12, 0x0e, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x3d, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goods_proto_rawDescOnce sync.Once
	file_goods_proto_rawDescData = file_goods_proto_rawDesc
)

func file_goods_proto_rawDescGZIP() []byte {
	file_goods_proto_rawDescOnce.Do(func() {
		file_goods_proto_rawDescData = protoimpl.X.CompressGZIP(file_goods_proto_rawDescData)
	})
	return file_goods_proto_rawDescData
}

var file_goods_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_goods_proto_goTypes = []interface{}{
	(*CategyListRes)(nil),        // 0: CategyListRes
	(*CategyInfoReq)(nil),        // 1: CategyInfoReq
	(*CategyInfoRes)(nil),        // 2: CategyInfoRes
	(*DelCategyReq)(nil),         // 3: DelCategyReq
	(*CategyFliterReq)(nil),      // 4: CategyFliterReq
	(*QueryCategyRes)(nil),       // 5: QueryCategyRes
	(*SubCategyReq)(nil),         // 6: SubCategyReq
	(*SubCategyListRes)(nil),     // 7: SubCategyListRes
	(*BatchCategyInfoReq)(nil),   // 8: BatchCategyInfoReq
	(*CategyBrandFilterReq)(nil), // 9: CategyBrandFilterReq
	(*CategyFilterReq)(nil),      // 10: CategyFilterReq
	(*CategyBrandInfoReq)(nil),   // 11: CategyBrandInfoReq
	(*CategyBrandListRes)(nil),   // 12: CategyBrandListRes
	(*CategyBrandInfoRes)(nil),   // 13: CategyBrandInfoRes
	(*BrandFilterReq)(nil),       // 14: BrandFilterReq
	(*BannerListRes)(nil),        // 15: BannerListRes
	(*BannerInfoReq)(nil),        // 16: BannerInfoReq
	(*BannerInfoRes)(nil),        // 17: BannerInfoRes
	(*BrandInfoReq)(nil),         // 18: BrandInfoReq
	(*BrandInfoRes)(nil),         // 19: BrandInfoRes
	(*BrandListRes)(nil),         // 20: BrandListRes
	(*DelBrandReq)(nil),          // 21: DelBrandReq
	(*DelGoodsReq)(nil),          // 22: DelGoodsReq
	(*CategyBriefInfoRes)(nil),   // 23: CategyBriefInfoRes
	(*GoodsInfoReq)(nil),         // 24: GoodsInfoReq
	(*GoodsIdsReq)(nil),          // 25: GoodsIdsReq
	(*WriteGoodsInfoReq)(nil),    // 26: WriteGoodsInfoReq
	(*GoodsFilterReq)(nil),       // 27: GoodsFilterReq
	(*GoodsInfoRes)(nil),         // 28: GoodsInfoRes
	(*GoodsListRes)(nil),         // 29: GoodsListRes
	(*emptypb.Empty)(nil),        // 30: google.protobuf.Empty
}
var file_goods_proto_depIdxs = []int32{
	2,  // 0: CategyListRes.data:type_name -> CategyInfoRes
	2,  // 1: SubCategyListRes.selfInfo:type_name -> CategyInfoRes
	2,  // 2: SubCategyListRes.subInfo:type_name -> CategyInfoRes
	13, // 3: CategyBrandListRes.data:type_name -> CategyBrandInfoRes
	19, // 4: CategyBrandInfoRes.brandInfo:type_name -> BrandInfoRes
	2,  // 5: CategyBrandInfoRes.CategyInfo:type_name -> CategyInfoRes
	17, // 6: BannerListRes.data:type_name -> BannerInfoRes
	19, // 7: BrandListRes.data:type_name -> BrandInfoRes
	23, // 8: GoodsInfoRes.categy:type_name -> CategyBriefInfoRes
	19, // 9: GoodsInfoRes.brand:type_name -> BrandInfoRes
	28, // 10: GoodsListRes.data:type_name -> GoodsInfoRes
	27, // 11: Goods.GetGoodList:input_type -> GoodsFilterReq
	25, // 12: Goods.GetGoodsListById:input_type -> GoodsIdsReq
	24, // 13: Goods.GetGoodsDetail:input_type -> GoodsInfoReq
	26, // 14: Goods.CreateGoods:input_type -> WriteGoodsInfoReq
	22, // 15: Goods.DeleteGoods:input_type -> DelGoodsReq
	26, // 16: Goods.UpdeateGoods:input_type -> WriteGoodsInfoReq
	30, // 17: Goods.GetCategyList:input_type -> google.protobuf.Empty
	6,  // 18: Goods.GetCategy:input_type -> SubCategyReq
	1,  // 19: Goods.CreateCategy:input_type -> CategyInfoReq
	3,  // 20: Goods.DeleteCategy:input_type -> DelCategyReq
	1,  // 21: Goods.UpdateCategy:input_type -> CategyInfoReq
	14, // 22: Goods.GetBrandList:input_type -> BrandFilterReq
	18, // 23: Goods.CreateBrand:input_type -> BrandInfoReq
	21, // 24: Goods.DeleteBrand:input_type -> DelBrandReq
	18, // 25: Goods.UpdateBrand:input_type -> BrandInfoReq
	30, // 26: Goods.GetBannerList:input_type -> google.protobuf.Empty
	16, // 27: Goods.CreateBanner:input_type -> BannerInfoReq
	21, // 28: Goods.DeleteBanner:input_type -> DelBrandReq
	16, // 29: Goods.UpdateBanner:input_type -> BannerInfoReq
	9,  // 30: Goods.GetCategyBrandList:input_type -> CategyBrandFilterReq
	1,  // 31: Goods.GetBrandListByCategy:input_type -> CategyInfoReq
	11, // 32: Goods.CreateCategyBrand:input_type -> CategyBrandInfoReq
	11, // 33: Goods.DeleteCategyBrand:input_type -> CategyBrandInfoReq
	11, // 34: Goods.UpdateCategyBrand:input_type -> CategyBrandInfoReq
	29, // 35: Goods.GetGoodList:output_type -> GoodsListRes
	29, // 36: Goods.GetGoodsListById:output_type -> GoodsListRes
	28, // 37: Goods.GetGoodsDetail:output_type -> GoodsInfoRes
	28, // 38: Goods.CreateGoods:output_type -> GoodsInfoRes
	30, // 39: Goods.DeleteGoods:output_type -> google.protobuf.Empty
	30, // 40: Goods.UpdeateGoods:output_type -> google.protobuf.Empty
	0,  // 41: Goods.GetCategyList:output_type -> CategyListRes
	7,  // 42: Goods.GetCategy:output_type -> SubCategyListRes
	2,  // 43: Goods.CreateCategy:output_type -> CategyInfoRes
	30, // 44: Goods.DeleteCategy:output_type -> google.protobuf.Empty
	30, // 45: Goods.UpdateCategy:output_type -> google.protobuf.Empty
	20, // 46: Goods.GetBrandList:output_type -> BrandListRes
	19, // 47: Goods.CreateBrand:output_type -> BrandInfoRes
	30, // 48: Goods.DeleteBrand:output_type -> google.protobuf.Empty
	30, // 49: Goods.UpdateBrand:output_type -> google.protobuf.Empty
	15, // 50: Goods.GetBannerList:output_type -> BannerListRes
	17, // 51: Goods.CreateBanner:output_type -> BannerInfoRes
	30, // 52: Goods.DeleteBanner:output_type -> google.protobuf.Empty
	30, // 53: Goods.UpdateBanner:output_type -> google.protobuf.Empty
	12, // 54: Goods.GetCategyBrandList:output_type -> CategyBrandListRes
	20, // 55: Goods.GetBrandListByCategy:output_type -> BrandListRes
	13, // 56: Goods.CreateCategyBrand:output_type -> CategyBrandInfoRes
	30, // 57: Goods.DeleteCategyBrand:output_type -> google.protobuf.Empty
	30, // 58: Goods.UpdateCategyBrand:output_type -> google.protobuf.Empty
	35, // [35:59] is the sub-list for method output_type
	11, // [11:35] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_goods_proto_init() }
func file_goods_proto_init() {
	if File_goods_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goods_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategyListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategyInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategyInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCategyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategyFliterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCategyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubCategyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubCategyListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCategyInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategyBrandFilterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategyFilterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategyBrandInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategyBrandListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategyBrandInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandFilterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBrandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelGoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategyBriefInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteGoodsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsFilterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goods_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goods_proto_goTypes,
		DependencyIndexes: file_goods_proto_depIdxs,
		MessageInfos:      file_goods_proto_msgTypes,
	}.Build()
	File_goods_proto = out.File
	file_goods_proto_rawDesc = nil
	file_goods_proto_goTypes = nil
	file_goods_proto_depIdxs = nil
}
