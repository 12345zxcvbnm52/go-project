syntax="proto3";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
option go_package=".;proto";

//用户服务
service User{
    // 获得用户列表,可通过FliterReq过滤
    rpc GetUserList(UserFliterReq)returns(UserListRes){
        option (google.api.http) = {
          get: "/users"
          body: "*"
        };
    }

    // 通过用户id获取用户信息
    rpc GetUserById(UserIdReq)returns(UserInfoRes){
        option (google.api.http) = {
            get: "/user/id"
            body: "*"
        };
    }

    // 通过用户电话号码获取用户信息
    rpc GetUserByMobile(UserMobileReq)returns(UserInfoRes){
        option (google.api.http) = {
            get: "/user/mobile"
            body: "*"
        };
    }

    // 创建一个用户
    rpc CreateUser(CreateUserReq)returns(CreateUserRes){
        option (google.api.http) = {
            post: "/users"
            body: "*"
        };
    }

    //更新用户,传入的用户信息字段中无论是否为空都会完全覆盖原来的值
    rpc AbsUpdateUser(UpdateUserReq)returns(google.protobuf.Empty){
        option (google.api.http) = {
            put: "/user/id"
            body: "*"
        };
    }

        //局部更新设置了值的参数
        rpc UpdateUser(UpdateUserReq)returns(google.protobuf.Empty){
            option (google.api.http) = {
                put: "/user/id"
                body: "*"
            };
        }

    //注销一个用户
    rpc DeleteUser(DelUserReq)returns(google.protobuf.Empty){
        option (google.api.http) = {
            delete: "/user/id"
            body: "*"
        };
    }

    //权限验证
    rpc CheckUserRole(UserPasswordReq)returns(UserCheckRes){
        option (google.api.http) = {
            get: "/user/id/check"
            body: "*"
        };
    }

}

message DelUserReq{
    string name = 1;
    uint32 id = 2;
}

message UserFliterReq{
    int32 pagesNum=1;
    int32 pageSize=2;
}

message UserInfoRes{
    uint32 id = 1;
    string password = 2;
    string mobile = 3;
    string userName = 4;
    int64 birth = 5;
    string gender = 6;
    int32 role = 7;
}

message UserListRes{
    int64 total = 1;
    repeated UserInfoRes data = 2;
}

message UserIdReq{
    uint32 id = 1;
}

message UserMobileReq{
    string mobile = 1;
}

message UserPasswordReq{
    string password = 1;
    uint32 id = 2;
    string userName =3;
}

message CreateUserReq{
    string userName = 1;
    string password = 2;
    string mobile = 3;
    string gender = 5;
    int64 birth = 6;
    int32 Role = 7;
}

message CreateUserRes{
    string userName = 1;
    string mobile = 3;
    uint32 id = 4;
    string gender = 5;
    int64 birth = 6;
    int32 Role = 7;
}

message UpdateUserReq{
    string userName = 1;
    string password = 2;
    string mobile = 3;
    uint32 id = 4;
    string gender = 5;
    int64 birth = 6;
    int32 Role = 7;
}

message UserCheckRes{
    bool ok = 1;
}

