# Generated with protoc-gen-openapi
# https://github.com/kollalabs/protoc-gen-openapi

openapi: 3.0.3
info:
    title: User API
    description: 用户服务
    version: 0.0.1
paths:
    /user/id:
        get:
            tags:
                - User
            summary: GetUserById
            description: 通过用户id获取用户信息
            operationId: User_GetUserById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserIdReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfoRes'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - User
            summary: UpdateUser
            description: 局部更新设置了值的参数
            operationId: User_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserReq'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - User
            summary: DeleteUser
            description: 注销一个用户
            operationId: User_DeleteUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DelUserReq'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user/id/check:
        get:
            tags:
                - User
            summary: CheckUserRole
            description: 权限验证
            operationId: User_CheckUserRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserPasswordReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserCheckRes'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user/mobile:
        get:
            tags:
                - User
            summary: GetUserByMobile
            description: 通过用户电话号码获取用户信息
            operationId: User_GetUserByMobile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserMobileReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfoRes'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users:
        get:
            tags:
                - User
            summary: GetUserList
            description: 获得用户列表,可通过FliterReq过滤
            operationId: User_GetUserList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserFliterReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserListRes'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - User
            summary: CreateUser
            description: 创建一个用户
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserRes'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateUserReq:
            type: object
            properties:
                userName:
                    type: string
                password:
                    type: string
                mobile:
                    type: string
                gender:
                    type: string
                birth:
                    type: integer
                    format: int64
                Role:
                    type: integer
                    format: int32
        CreateUserRes:
            type: object
            properties:
                userName:
                    type: string
                mobile:
                    type: string
                id:
                    type: integer
                    format: uint32
                gender:
                    type: string
                birth:
                    type: integer
                    format: int64
                Role:
                    type: integer
                    format: int32
        DelUserReq:
            type: object
            properties:
                name:
                    type: string
                id:
                    type: integer
                    format: uint32
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateUserReq:
            type: object
            properties:
                userName:
                    type: string
                password:
                    type: string
                mobile:
                    type: string
                id:
                    type: integer
                    format: uint32
                gender:
                    type: string
                birth:
                    type: integer
                    format: int64
                Role:
                    type: integer
                    format: int32
        UserCheckRes:
            type: object
            properties:
                ok:
                    type: boolean
        UserFliterReq:
            type: object
            properties:
                pagesNum:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        UserIdReq:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        UserInfoRes:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                password:
                    type: string
                mobile:
                    type: string
                userName:
                    type: string
                birth:
                    type: integer
                    format: int64
                gender:
                    type: string
                role:
                    type: integer
                    format: int32
        UserListRes:
            type: object
            properties:
                total:
                    type: integer
                    format: int64
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfoRes'
        UserMobileReq:
            type: object
            properties:
                mobile:
                    type: string
        UserPasswordReq:
            type: object
            properties:
                password:
                    type: string
                id:
                    type: integer
                    format: uint32
                userName:
                    type: string
tags:
    - name: User
